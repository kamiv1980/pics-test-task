{"version":3,"file":"static/js/275.d70e0878.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/icons-material/esm/Delete.js","app/components/CommentCard.js","app/forms/CommentForm.js","app/pages/comments.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {Card, CardContent, Typography, Box, IconButton, Tooltip} from '@mui/material';\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nimport { deleteComment } from '../../features/comments/commentsSlice'\n\nconst CommentCard = ({ comment }) => {\n    const dispatch = useDispatch();\n\n    return (\n        <Card variant=\"outlined\" sx={{ mb: 2, boxShadow: 3}}>\n            <CardContent>\n                <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                    <Typography variant=\"h6\" color={'textSecondary'}>\n                        {comment.user.fullName} (@{comment.user.username})\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"info\">\n                        {comment.likes} likes\n                    </Typography>\n                </Box>\n                <Typography variant=\"body1\" sx={{ mt: 1, ml: 3 }}>\n                    {comment.body}\n                </Typography>\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <Tooltip title=\"Delete\">\n                        <IconButton onClick={() => dispatch(deleteComment(comment.id))}>\n                            <DeleteIcon color=\"error\" />\n                        </IconButton>\n                    </Tooltip>\n                </Box>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default CommentCard;\n","import React from \"react\";\nimport {Box, Button, TextField} from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport { getAllProps } from '../../features/common/commonSlice'\nimport {addComment} from \"../../features/comments/commentsSlice\";\n\nconst errorMessage = 'field is required'\n\nfunction Form(){\n    const commonProps = useSelector(getAllProps)\n\n    const initialValue = {\n        body: '',\n        likes: 0,\n        user: commonProps\n    }\n\n    const { register, handleSubmit, reset, clearErrors, formState: { errors } } = useForm({\n        defaultValues: initialValue\n    });\n\n    const dispatch = useDispatch();\n\n\n\n    const onSubmit = async (data) => {\n        await dispatch(addComment(data))\n        reset()\n    }\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <TextField\n                margin=\"dense\"\n                label=\"Add comment\"\n                type=\"text\"\n                fullWidth\n                variant=\"outlined\"\n                error={!!errors.body}\n                {...{helperText:errors.body?errorMessage:''}}\n                {...register('body', { required: true })}\n            />\n            <Box display=\"flex\" justifyContent=\"flex-end\" sx={{mt: 1, mb: 2}}>\n                <Button\n                    variant=\"text\"\n                    color=\"primary\"\n                    type={'reset'}\n                    onClick={()=>clearErrors()}\n                >\n                    Cancel\n                </Button>\n\n                <Button\n                    type={'submit'}\n                    variant=\"text\"\n                    color=\"primary\"\n                    sx={{ ml: 2 }}\n                >\n                    Save\n                </Button>\n            </Box>\n        </form>\n    )\n}\n\nexport default Form;\n","import React, {useEffect} from 'react';\nimport {Paper} from \"@mui/material\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchComments} from \"../../features/comments/commentsSlice\";\nimport CommentCard from \"../components/CommentCard\";\nimport CommentForm from \"../forms/CommentForm\";\n\nfunction Page() {\n\n    const dispatch = useDispatch();\n    const comments = useSelector(state => state.comments.comments);\n    const status = useSelector(state => state.comments.status);\n    const error = useSelector(state => state.comments.error);\n\n    useEffect(() => {\n        if (status === 'idle') {\n            dispatch(fetchComments());\n        }\n    }, [status, dispatch]);\n\n    if (status === 'loading') {\n        return <div>Loading...</div>;\n    }\n\n    if (status === 'failed') {\n        return <div>Error: {error}</div>;\n    }\n\n    return (\n        <Paper sx={{p:2}} elevation={3}>\n            <CommentForm/>\n            {comments.map(comment => (\n                <CommentCard key={comment.id} comment={comment}/>\n            ))}\n        </Paper>\n    );\n}\n\nexport default Page;\n"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","ownerState","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as","createSvgIcon","d","_ref","comment","dispatch","useDispatch","Card","variant","sx","mb","boxShadow","children","_jsxs","CardContent","Box","display","justifyContent","alignItems","Typography","color","user","fullName","username","likes","mt","ml","body","Tooltip","title","IconButton","onClick","deleteComment","id","DeleteIcon","initialValue","useSelector","getAllProps","register","handleSubmit","reset","clearErrors","formState","errors","useForm","defaultValues","onSubmit","async","addComment","data","TextField","margin","label","type","fullWidth","error","helperText","required","Button","comments","state","status","useEffect","fetchComments","p","CommentForm","map","CommentCard"],"sourceRoot":""}